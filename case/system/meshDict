/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                |
| \\      /  F ield         | cfMesh: A library for mesh generation          |
|  \\    /   O peration     |                                                |
|   \\  /    A nd           | Author: Franjo Juretic                         |
|    \\/     M anipulation  | E-mail: franjo.juretic@c-fields.com            |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version   2.0;
    format    ascii;
    class     dictionary;
    location  "system";
    object    meshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

surfaceFile "CAD/oscillator_crossflow.fms";

maxCellSize 0.001;

localRefinement
{  

    wall_pipe_small
    {
        additionalRefinementLevels  2;        
    }   
    wall_pipe_union
    {
        additionalRefinementLevels  2;        
    }
    wall_pipe_big
    {
        additionalRefinementLevels  2;        
    }
    wall_FO_inner_right
    {
        additionalRefinementLevels  3;        
    }
    wall_FO_inner_left
    {
        additionalRefinementLevels  3; 
    } 
    wall_FO_outer_top
    {
        additionalRefinementLevels  3; 
    }    
    wall_FO_outer_bottom
    {
        additionalRefinementLevels  3; 
    }   
    wall_FO_inlet_right
    {
        additionalRefinementLevels  3; 
    }
    wall_FO_inlet_left
    {
        additionalRefinementLevels  3; 
    }       
}

objectRefinements
{
    /*
    cylinderMain
    {
        type                        cone;
        additionalRefinementLevels  2;
        p0                          ( 0.065 0.0 0.0);
        radius0                     0.02;
        p1                          (-0.050 0.0 0.0);
        radius1                     0.02;
    }


    cylinderPipe1
    {
        type                        cone;
        additionalRefinementLevels  3;
        p0                          (-0.028 0.0 0.0);
        radius0                     0.004;
        p1                          ( 0.030 0.0 0.0);
        radius1                     0.004;     
    }   

    cylinderPipe2
    {
        type                        cone;
        additionalRefinementLevels  3;
        p0                          (-0.028 -0.0175 0.0);
        radius0                     0.003;
        p1                          (-0.028  0.0000 0.0);
        radius1                     0.003;
    }   

    cylinderOutlet
    {
        type                        cone;
        additionalRefinementLevels  1;
        p0                          (-0.040 0.0 0.0);
        radius0                     0.003;
        p1                          (-0.090 0.0 0.0);
        radius1                     0.02;
    } 

    cylinderInlet
    {
        type                        cone;
        additionalRefinementLevels  1;
        p0                          (0.083 0.0 0.0);
        radius0                     0.003;
        p1                          (0.065 0.0 0.0);
        radius1                     0.02;
    }     

    cone1
    {
        type                        hollowCone;
        additionalRefinementLevels  3;
        p0                          (0.005 0.0 0.0);
        radius0_Inner               0.0;
        radius0_Outer               0.0045;
        p1                          (0.033 0.0 0.0);
        radius1_Inner               0.0;
        radius1_Outer               0.0155;
    }

    cone2
    {
        type                        hollowCone;
        additionalRefinementLevels  3;
        p0                          (0.033 0.0 0.0);
        radius0_Inner               0.0;
        radius0_Outer               0.0155;
        p1                          (0.0575 0.0 0.0);
        radius1_Inner               0.0;
        radius1_Outer               0.005;
    }
    */        
}

boundaryLayers
{
    patchBoundaryLayers
    {
        wall_pipe_small
        {
            nLayers             3;
            thicknessRatio      1.2;         
        }   
        wall_pipe_union
        {
            nLayers             3;
            thicknessRatio      1.2;      
        }
        wall_pipe_big
        {
            nLayers             3;
            thicknessRatio      1.2;       
        }
        wall_FO_inner_right
        {
            nLayers             3;
            thicknessRatio      1.2;      
        }
        wall_FO_inner_left
        {
            nLayers             3;
            thicknessRatio      1.2;
        } 
        wall_FO_outer_top
        {
            nLayers             3;
            thicknessRatio      1.2;
        }    
        wall_FO_outer_bottom
        {
            nLayers             3;
            thicknessRatio      1.2;
        }   
        wall_FO_inlet_right
        {
            nLayers             3;
            thicknessRatio      1.2;
        }
        wall_FO_inlet_left
        {
            nLayers             3;
            thicknessRatio      1.2;
        }                                 
    }

    optimiseLayer 1;

    optimisationParameters
    {
        nSmoothNormals      10;
        featureSizeFactor   0.3;
        reCalculateNormals  1;
        maxNumIterations    20;
    }
}

renameBoundary
{
    defaultType wall;
    
    newPatchNames
    {
        inlet_pipe
        {
            newName inlet_pipe;
            type    patch;
        }
        outlet
        {
            newName outlet;
            type    patch;
        }
        inlet_FO
        {
            newName inlet_FO;
            type    patch;
        }          
    }
}

// ************************************************************************* //
